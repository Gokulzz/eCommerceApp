[08:09:17InformationRequest starting HTTP/2 POST https://localhost:32774/UserLogin application/json 71] { Protocol: "HTTP/2", Method: "POST", ContentType: "application/json", ContentLength: 71, Scheme: "https", Host: "localhost:32774", PathBase: "", Path: "/UserLogin", QueryString: "", EventId: { Id: 1 }, SourceContext: "Microsoft.AspNetCore.Hosting.Diagnostics", RequestId: "0HN365II2EBE7:0000000D", RequestPath: "/UserLogin", ConnectionId: "0HN365II2EBE7", MachineName: "fc1da24897dc", ProcessId: 25, ThreadId: 20, ThreadName: ".NET ThreadPool Worker" }  
[08:09:18InformationCORS policy execution successful.] { EventId: { Id: 4, Name: "PolicySuccess" }, SourceContext: "Microsoft.AspNetCore.Cors.Infrastructure.CorsService", RequestId: "0HN365II2EBE7:0000000D", RequestPath: "/UserLogin", ConnectionId: "0HN365II2EBE7", MachineName: "fc1da24897dc", ProcessId: 25, ThreadId: 20, ThreadName: ".NET ThreadPool Worker" }  
[08:09:18InformationExecuting endpoint '"E_Commerce.PL.Controllers.LoginController.UserLogin (E-Commerce.PL)"'] { EventId: { Name: "ExecutingEndpoint" }, SourceContext: "Microsoft.AspNetCore.Routing.EndpointMiddleware", RequestId: "0HN365II2EBE7:0000000D", RequestPath: "/UserLogin", ConnectionId: "0HN365II2EBE7", MachineName: "fc1da24897dc", ProcessId: 25, ThreadId: 20, ThreadName: ".NET ThreadPool Worker" }  
[08:09:18InformationRoute matched with "{action = \"UserLogin\", controller = \"Login\"}". Executing controller action with signature "System.Threading.Tasks.Task`1[eCommerceApp.BLL.ApiResponse] UserLogin(eCommerceApp.BLL.DTO.UserLoginDTO)" on controller "E_Commerce.PL.Controllers.LoginController" ("E-Commerce.PL").] { EventId: { Id: 3, Name: "ControllerActionExecuting" }, SourceContext: "Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker", ActionId: "023488a4-9401-4703-973a-369161ae443e", ActionName: "E_Commerce.PL.Controllers.LoginController.UserLogin (E-Commerce.PL)", RequestId: "0HN365II2EBE7:0000000D", RequestPath: "/UserLogin", ConnectionId: "0HN365II2EBE7", MachineName: "fc1da24897dc", ProcessId: 25, ThreadId: 20, ThreadName: ".NET ThreadPool Worker" }  
[08:09:20ErrorAn error occurred using the connection to database '"E-CommerceApp"' on server '"10.0.0.174,1433"'.] { EventId: { Id: 20004, Name: "Microsoft.EntityFrameworkCore.Database.Connection.ConnectionError" }, SourceContext: "Microsoft.EntityFrameworkCore.Database.Connection", ActionId: "023488a4-9401-4703-973a-369161ae443e", ActionName: "E_Commerce.PL.Controllers.LoginController.UserLogin (E-Commerce.PL)", RequestId: "0HN365II2EBE7:0000000D", RequestPath: "/UserLogin", ConnectionId: "0HN365II2EBE7", MachineName: "fc1da24897dc", ProcessId: 25, ThreadId: 20, ThreadName: ".NET ThreadPool Worker" }  
[08:09:20ErrorAn exception occurred while iterating over the results of a query for context type '"eCommerceApp.DAL.Data.DataContext"'."
""Microsoft.Data.SqlClient.SqlException (0x80131904): A connection was successfully established with the server, but then an error occurred during the pre-login handshake. (provider: TCP Provider, error: 35 - An internal exception was caught)
 ---> System.Security.Authentication.AuthenticationException: The remote certificate was rejected by the provided RemoteCertificateValidationCallback.
   at System.Net.Security.SslStream.SendAuthResetSignal(ProtocolToken message, ExceptionDispatchInfo exception)
   at System.Net.Security.SslStream.CompleteHandshake(SslAuthenticationOptions sslAuthenticationOptions)
   at System.Net.Security.SslStream.ForceAuthenticationAsync[TIOAdapter](TIOAdapter adapter, Boolean receiveFirst, Byte[] reAuthenticationData, Boolean isApm)
   at System.Net.Security.SslStream.AuthenticateAsClient(SslClientAuthenticationOptions sslClientAuthenticationOptions)
   at System.Net.Security.SslStream.AuthenticateAsClient(String targetHost, X509CertificateCollection clientCertificates, SslProtocols enabledSslProtocols, Boolean checkCertificateRevocation)
   at Microsoft.Data.SqlClient.SNI.SNITCPHandle.EnableSsl(UInt32 options)
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParser.EnableSsl(UInt32 info, SqlConnectionEncryptOption encrypt, Boolean integratedSecurity, String serverCertificateFilename)
   at Microsoft.Data.SqlClient.TdsParser.ConsumePreLoginHandshake(SqlConnectionEncryptOption encrypt, Boolean trustServerCert, Boolean integratedSecurity, Boolean& marsCapable, Boolean& fedAuthRequired, Boolean tlsFirst, String serverCert)
   at Microsoft.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, SqlConnectionString connectionOptions, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool)
   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
ClientConnectionId:1fa29979-8220-4248-9840-e58bfe70e3aa
Error Number:-2146893019,State:0,Class:20"] { EventId: { Id: 10100, Name: "Microsoft.EntityFrameworkCore.Query.QueryIterationFailed" }, SourceContext: "Microsoft.EntityFrameworkCore.Query", ActionId: "023488a4-9401-4703-973a-369161ae443e", ActionName: "E_Commerce.PL.Controllers.LoginController.UserLogin (E-Commerce.PL)", RequestId: "0HN365II2EBE7:0000000D", RequestPath: "/UserLogin", ConnectionId: "0HN365II2EBE7", MachineName: "fc1da24897dc", ProcessId: 25, ThreadId: 20, ThreadName: ".NET ThreadPool Worker" } Microsoft.Data.SqlClient.SqlException (0x80131904): A connection was successfully established with the server, but then an error occurred during the pre-login handshake. (provider: TCP Provider, error: 35 - An internal exception was caught)
 ---> System.Security.Authentication.AuthenticationException: The remote certificate was rejected by the provided RemoteCertificateValidationCallback.
   at System.Net.Security.SslStream.SendAuthResetSignal(ProtocolToken message, ExceptionDispatchInfo exception)
   at System.Net.Security.SslStream.CompleteHandshake(SslAuthenticationOptions sslAuthenticationOptions)
   at System.Net.Security.SslStream.ForceAuthenticationAsync[TIOAdapter](TIOAdapter adapter, Boolean receiveFirst, Byte[] reAuthenticationData, Boolean isApm)
   at System.Net.Security.SslStream.AuthenticateAsClient(SslClientAuthenticationOptions sslClientAuthenticationOptions)
   at System.Net.Security.SslStream.AuthenticateAsClient(String targetHost, X509CertificateCollection clientCertificates, SslProtocols enabledSslProtocols, Boolean checkCertificateRevocation)
   at Microsoft.Data.SqlClient.SNI.SNITCPHandle.EnableSsl(UInt32 options)
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParser.EnableSsl(UInt32 info, SqlConnectionEncryptOption encrypt, Boolean integratedSecurity, String serverCertificateFilename)
   at Microsoft.Data.SqlClient.TdsParser.ConsumePreLoginHandshake(SqlConnectionEncryptOption encrypt, Boolean trustServerCert, Boolean integratedSecurity, Boolean& marsCapable, Boolean& fedAuthRequired, Boolean tlsFirst, String serverCert)
   at Microsoft.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, SqlConnectionString connectionOptions, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool)
   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
ClientConnectionId:1fa29979-8220-4248-9840-e58bfe70e3aa
Error Number:-2146893019,State:0,Class:20
 
[08:09:21InformationExecuted action "E_Commerce.PL.Controllers.LoginController.UserLogin (E-Commerce.PL)" in 2848.2605ms] { EventId: { Id: 2, Name: "ActionExecuted" }, SourceContext: "Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker", RequestId: "0HN365II2EBE7:0000000D", RequestPath: "/UserLogin", ConnectionId: "0HN365II2EBE7", MachineName: "fc1da24897dc", ProcessId: 25, ThreadId: 20, ThreadName: ".NET ThreadPool Worker" }  
[08:09:21InformationExecuted endpoint '"E_Commerce.PL.Controllers.LoginController.UserLogin (E-Commerce.PL)"'] { EventId: { Id: 1, Name: "ExecutedEndpoint" }, SourceContext: "Microsoft.AspNetCore.Routing.EndpointMiddleware", RequestId: "0HN365II2EBE7:0000000D", RequestPath: "/UserLogin", ConnectionId: "0HN365II2EBE7", MachineName: "fc1da24897dc", ProcessId: 25, ThreadId: 20, ThreadName: ".NET ThreadPool Worker" }  
[08:09:21Error{"Message":"A connection was successfully established with the server, but then an error occurred during the pre-login handshake. (provider: TCP Provider, error: 35 - An internal exception was caught)","StatusCode":500}] { SourceContext: "eCommerceApp.DAL.Models.User", RequestId: "0HN365II2EBE7:0000000D", RequestPath: "/UserLogin", ConnectionId: "0HN365II2EBE7", MachineName: "fc1da24897dc", ProcessId: 25, ThreadId: 20, ThreadName: ".NET ThreadPool Worker" }  
[08:09:21InformationRequest finished HTTP/2 POST https://localhost:32774/UserLogin application/json 71 - 500 - application/json 3398.2248ms] { ElapsedMilliseconds: 3398.2248, StatusCode: 500, ContentType: "application/json", ContentLength: null, Protocol: "HTTP/2", Method: "POST", Scheme: "https", Host: "localhost:32774", PathBase: "", Path: "/UserLogin", QueryString: "", EventId: { Id: 2 }, SourceContext: "Microsoft.AspNetCore.Hosting.Diagnostics", RequestId: "0HN365II2EBE7:0000000D", RequestPath: "/UserLogin", ConnectionId: "0HN365II2EBE7", MachineName: "fc1da24897dc", ProcessId: 25, ThreadId: 20, ThreadName: ".NET ThreadPool Worker" }  
