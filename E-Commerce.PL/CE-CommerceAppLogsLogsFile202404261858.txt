[06:58:21InformationRequest starting HTTP/2 POST https://localhost:32770/UserLogin application/json 71] { Protocol: "HTTP/2", Method: "POST", ContentType: "application/json", ContentLength: 71, Scheme: "https", Host: "localhost:32770", PathBase: "", Path: "/UserLogin", QueryString: "", EventId: { Id: 1 }, SourceContext: "Microsoft.AspNetCore.Hosting.Diagnostics", RequestId: "0HN364AUSO4IU:00000007", RequestPath: "/UserLogin", ConnectionId: "0HN364AUSO4IU", MachineName: "78ccb50b2ead", ProcessId: 24, ThreadId: 20, ThreadName: ".NET ThreadPool Worker" }  
[06:58:22InformationCORS policy execution successful.] { EventId: { Id: 4, Name: "PolicySuccess" }, SourceContext: "Microsoft.AspNetCore.Cors.Infrastructure.CorsService", RequestId: "0HN364AUSO4IU:00000007", RequestPath: "/UserLogin", ConnectionId: "0HN364AUSO4IU", MachineName: "78ccb50b2ead", ProcessId: 24, ThreadId: 20, ThreadName: ".NET ThreadPool Worker" }  
[06:58:22InformationExecuting endpoint '"E_Commerce.PL.Controllers.LoginController.UserLogin (E-Commerce.PL)"'] { EventId: { Name: "ExecutingEndpoint" }, SourceContext: "Microsoft.AspNetCore.Routing.EndpointMiddleware", RequestId: "0HN364AUSO4IU:00000007", RequestPath: "/UserLogin", ConnectionId: "0HN364AUSO4IU", MachineName: "78ccb50b2ead", ProcessId: 24, ThreadId: 20, ThreadName: ".NET ThreadPool Worker" }  
[06:58:22InformationRoute matched with "{action = \"UserLogin\", controller = \"Login\"}". Executing controller action with signature "System.Threading.Tasks.Task`1[eCommerceApp.BLL.ApiResponse] UserLogin(eCommerceApp.BLL.DTO.UserLoginDTO)" on controller "E_Commerce.PL.Controllers.LoginController" ("E-Commerce.PL").] { EventId: { Id: 3, Name: "ControllerActionExecuting" }, SourceContext: "Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker", ActionId: "87173158-babc-427f-bb48-3759a5c37f46", ActionName: "E_Commerce.PL.Controllers.LoginController.UserLogin (E-Commerce.PL)", RequestId: "0HN364AUSO4IU:00000007", RequestPath: "/UserLogin", ConnectionId: "0HN364AUSO4IU", MachineName: "78ccb50b2ead", ProcessId: 24, ThreadId: 20, ThreadName: ".NET ThreadPool Worker" }  
[06:58:40ErrorAn error occurred using the connection to database '"E-CommerceApp"' on server '"localhost"'.] { EventId: { Id: 20004, Name: "Microsoft.EntityFrameworkCore.Database.Connection.ConnectionError" }, SourceContext: "Microsoft.EntityFrameworkCore.Database.Connection", ActionId: "87173158-babc-427f-bb48-3759a5c37f46", ActionName: "E_Commerce.PL.Controllers.LoginController.UserLogin (E-Commerce.PL)", RequestId: "0HN364AUSO4IU:00000007", RequestPath: "/UserLogin", ConnectionId: "0HN364AUSO4IU", MachineName: "78ccb50b2ead", ProcessId: 24, ThreadId: 20, ThreadName: ".NET ThreadPool Worker" }  
[06:58:41ErrorAn exception occurred while iterating over the results of a query for context type '"eCommerceApp.DAL.Data.DataContext"'."
""Microsoft.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 40 - Could not open a connection to SQL Server: Could not open a connection to SQL Server)
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, SqlConnectionString connectionOptions, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool)
   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
ClientConnectionId:00000000-0000-0000-0000-000000000000"] { EventId: { Id: 10100, Name: "Microsoft.EntityFrameworkCore.Query.QueryIterationFailed" }, SourceContext: "Microsoft.EntityFrameworkCore.Query", ActionId: "87173158-babc-427f-bb48-3759a5c37f46", ActionName: "E_Commerce.PL.Controllers.LoginController.UserLogin (E-Commerce.PL)", RequestId: "0HN364AUSO4IU:00000007", RequestPath: "/UserLogin", ConnectionId: "0HN364AUSO4IU", MachineName: "78ccb50b2ead", ProcessId: 24, ThreadId: 20, ThreadName: ".NET ThreadPool Worker" } Microsoft.Data.SqlClient.SqlException (0x80131904): A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 40 - Could not open a connection to SQL Server: Could not open a connection to SQL Server)
   at Microsoft.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   at Microsoft.Data.SqlClient.TdsParser.Connect(ServerInfo serverInfo, SqlInternalConnectionTds connHandler, Boolean ignoreSniOpenTimeout, Int64 timerExpire, SqlConnectionString connectionOptions, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.AttemptOneLogin(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean ignoreSniOpenTimeout, TimeoutTimer timeout, Boolean withFailover)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.LoginNoFailover(ServerInfo serverInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString connectionOptions, SqlCredential credential, TimeoutTimer timeout)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds.OpenLoginEnlist(TimeoutTimer timeout, SqlConnectionString connectionOptions, SqlCredential credential, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance)
   at Microsoft.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, Boolean applyTransientFaultHandling, String accessToken, DbConnectionPool pool)
   at Microsoft.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   at Microsoft.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   at Microsoft.Data.ProviderBase.DbConnectionPool.WaitForPendingOpen()
--- End of stack trace from previous location ---
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenInternalAsync(Boolean errorsExpected, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(CancellationToken cancellationToken, Boolean errorsExpected)
   at Microsoft.EntityFrameworkCore.Storage.RelationalCommand.ExecuteReaderAsync(RelationalCommandParameterObject parameterObject, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.InitializeReaderAsync(AsyncEnumerator enumerator, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.SqlServer.Storage.Internal.SqlServerExecutionStrategy.ExecuteAsync[TState,TResult](TState state, Func`4 operation, Func`4 verifySucceeded, CancellationToken cancellationToken)
   at Microsoft.EntityFrameworkCore.Query.Internal.SingleQueryingEnumerable`1.AsyncEnumerator.MoveNextAsync()
ClientConnectionId:00000000-0000-0000-0000-000000000000
 
[06:58:41InformationExecuted action "E_Commerce.PL.Controllers.LoginController.UserLogin (E-Commerce.PL)" in 18909.8926ms] { EventId: { Id: 2, Name: "ActionExecuted" }, SourceContext: "Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker", RequestId: "0HN364AUSO4IU:00000007", RequestPath: "/UserLogin", ConnectionId: "0HN364AUSO4IU", MachineName: "78ccb50b2ead", ProcessId: 24, ThreadId: 20, ThreadName: ".NET ThreadPool Worker" }  
[06:58:41InformationExecuted endpoint '"E_Commerce.PL.Controllers.LoginController.UserLogin (E-Commerce.PL)"'] { EventId: { Id: 1, Name: "ExecutedEndpoint" }, SourceContext: "Microsoft.AspNetCore.Routing.EndpointMiddleware", RequestId: "0HN364AUSO4IU:00000007", RequestPath: "/UserLogin", ConnectionId: "0HN364AUSO4IU", MachineName: "78ccb50b2ead", ProcessId: 24, ThreadId: 20, ThreadName: ".NET ThreadPool Worker" }  
[06:58:41Error{"Message":"A network-related or instance-specific error occurred while establishing a connection to SQL Server. The server was not found or was not accessible. Verify that the instance name is correct and that SQL Server is configured to allow remote connections. (provider: TCP Provider, error: 40 - Could not open a connection to SQL Server: Could not open a connection to SQL Server)","StatusCode":500}] { SourceContext: "eCommerceApp.DAL.Models.User", RequestId: "0HN364AUSO4IU:00000007", RequestPath: "/UserLogin", ConnectionId: "0HN364AUSO4IU", MachineName: "78ccb50b2ead", ProcessId: 24, ThreadId: 20, ThreadName: ".NET ThreadPool Worker" }  
[06:58:41InformationRequest finished HTTP/2 POST https://localhost:32770/UserLogin application/json 71 - 500 - application/json 19626.8258ms] { ElapsedMilliseconds: 19626.8258, StatusCode: 500, ContentType: "application/json", ContentLength: null, Protocol: "HTTP/2", Method: "POST", Scheme: "https", Host: "localhost:32770", PathBase: "", Path: "/UserLogin", QueryString: "", EventId: { Id: 2 }, SourceContext: "Microsoft.AspNetCore.Hosting.Diagnostics", RequestId: "0HN364AUSO4IU:00000007", RequestPath: "/UserLogin", ConnectionId: "0HN364AUSO4IU", MachineName: "78ccb50b2ead", ProcessId: 24, ThreadId: 20, ThreadName: ".NET ThreadPool Worker" }  
