<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Add Product</title>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css">
    <style>
        body {
            background-color: #1e1e1e;
            color: #ffffff;
            font-family: 'Arial', sans-serif;
        }

        .container {
            background-color: #252525;
            border-radius: 10px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.5);
            padding: 30px;
        }

        h2 {
            color: #007bff;
            margin-bottom: 30px;
            text-align: center;
        }

        label {
            font-weight: bold;
            color: #ffffff;
        }

        .form-control {
            border-radius: 5px;
            background-color: #333333;
            color: #ffffff;
            border: 1px solid #007bff;
        }

        .form-control:focus {
            border-color: #007bff;
            box-shadow: none;
        }

        #categoryLabel {
            font-style: italic;
            color: #cccccc;
        }

        #successMessage {
            margin-top: 20px;
        }

        .btn-primary {
            background-color: #007bff;
            border-color: #007bff;
        }

        .btn-primary:hover {
            background-color: #0056b3;
            border-color: #0056b3;
        }

        .btn-primary:focus {
            box-shadow: none;
            background-color: #0056b3;
            border-color: #0056b3;
        }

        .btn-primary:active {
            background-color: #0056b3;
            border-color: #0056b3;
        }

        .btn-primary:active:focus {
            box-shadow: none;
            background-color: #0056b3;
            border-color: #0056b3;
        }
    </style>
</head>

<body>

    <div class="container mt-5">
        <h2>Add Product</h2>

        <form id="addProductForm" action="/admin/add-product" method="post" enctype="multipart/form-data">
            <div class="form-group">
                <label for="productName">Product Name</label>
                <input type="text" class="form-control" id="Name" name="Name" required>
            </div>
            <div class="form-group">
                <label for="categoryId">Category</label>
                <select class="form-control" id="CategoryId" name="CategoryId">
                    <!-- Options will be dynamically populated here -->
                </select>
            </div>
            <div class="form-group">
                <label for="categoryLabel">Selected Category:</label>
                <span id="categoryLabel"></span>
            </div>
            <div class="form-group">
                <label for="quantity">Quantity:</label>
                <input type="number" class="form-control" id="Quantity" name="Quantity" required>
            </div>
            <div class="form-group">
                <label for="productDescription">Product Description</label>
                <textarea class="form-control" id="Description" name="Description" rows="3" required></textarea>
            </div>
            <div class="form-group">
                <label for="productPrice">Product Price</label>
                <input type="number" class="form-control" id="Price" name="Price" step="0.01" required>
            </div>
            <div class="form-group">
                <label for="fileData">Product Image</label>
                <input type="file" class="form-control-file" id="fileData" name="fileData" required>
            </div>
            <button type="button" class="btn btn-primary btn-block" onclick="submitForm()">Submit</button>
        </form>

        <div id="successMessage" class="mt-3" style="display: none;">
            <div class="alert alert-success" role="alert">
                Product added successfully!
            </div>
        </div>
    </div>

    <!-- Bootstrap JS (for some components) -->
    <script src="https://code.jquery.com/jquery-3.3.1.slim.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js"></script>

    <!-- Your custom JavaScript -->
    <script>
        document.addEventListener("DOMContentLoaded", function () {
      fetchCategoriesAndPopulateDropdown();
      const dropdown = document.getElementById('CategoryId');
      dropdown.addEventListener('change', updateCategoryLabel);
    });

    async function fetchCategoriesAndPopulateDropdown() {
      try {
        // Fetch roles and populate dropdown
        const response = await fetch('https://localhost:7114/GetAllCategory', {
          method: 'GET',
          headers: {
            'Content-Type': 'application/json'
          }
        });

        if (!response.ok) {
          throw new Error('Network response was not ok');
        }

        const data = await response.json();

        console.log('Roles response:', data); // Log the response

        // Check if 'result' property is an array
        if (Array.isArray(data.result)) {
          // Populate the dropdown options
          populateRolesDropdown(data.result);
        } else {
          console.error('Invalid response format - result is not an array');
        }
      } catch (error) {
        console.error('There was a problem fetching roles:', error);
      }
    }

    // Function to populate roles dropdown options
   // Function to populate roles dropdown options
function populateRolesDropdown(categories) {
  var dropdown = document.getElementById('CategoryId');

  // Clear existing options
  dropdown.innerHTML = '';

  // Populate options from roles array
  categories.forEach(category => {
    var option = document.createElement('option');
    option.value =   category.categoryId; 
    option.text = category.name; 
    dropdown.add(option);
  });

  // Populate role label on page load
  updateCategoryLabel();
}


    // Function to update role label
    function updateCategoryLabel() {
      var dropdown = document.getElementById('CategoryId');
      var categoryLabel = document.getElementById('categoryLabel');

      if (dropdown.selectedIndex !== -1) {
        // If an option is selected, update the category label
        categoryLabel.textContent = dropdown.options[dropdown.selectedIndex].text;
      }
    }

    async function submitForm() {
    // Get form data
    const form = document.getElementById('addProductForm');
    const formData = new FormData(form);

    try {
        // Add categoryId to form data
       

        // Make API call
        const authToken = localStorage.getItem('jwtToken');
        const response = await fetch('https://localhost:7114/AddProduct', {
            method: 'POST',
            headers: {
                'Authorization': `Bearer ${authToken}`
            },
            body: formData
        });

        // Handle the API response
        if (response.ok) {
            const data = await response.json();

            // Display success message
            document.getElementById('successMessage').style.display = 'block';

            // Optional: Reset the form after success
            //form.reset();
        } else {
            // Handle non-successful response
            console.error('API call failed:', response.statusText);
        }
    } catch (error) {
        // Handle network or other errors
        console.error('Error:', error);
    }
}

    </script>

</body>

</html>
